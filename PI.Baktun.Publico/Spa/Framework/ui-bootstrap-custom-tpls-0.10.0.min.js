/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/
 * Version: 0.10.0 - 2014-01-14
 * License: MIT
 */
angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.position", "ui.bootstrap.bindHtml", "ui.bootstrap.typeahead", "ui.bootstrap.tpls", "ui.bootstrap.datepicker", "ui.bootstrap.dateparser", "ui.bootstrap.position", "ui.bootstrap.tpls", "ui.bootstrap.tabs"]);
angular.module("ui.bootstrap.tpls", ["Spa/Views/Templates/typeahead-match.html", "Spa/Views/Templates/typeahead-popup.html", "Spa/Views/Templates/datepicker.html", "Spa/Views/Templates/day.html", "Spa/Views/Templates/month.html", "Spa/Views/Templates/popup.html", "Spa/Views/Templates/year.html", "Spa/Views/Templates/tab.html", "Spa/Views/Templates/tabset.html"]);
angular.module("ui.bootstrap.position", []).factory("$position", ["$document", "$window", function (a, b) { function c(a, c) { return a.currentStyle ? a.currentStyle[c] : b.getComputedStyle ? b.getComputedStyle(a)[c] : a.style[c] } function d(a) { return "static" === (c(a, "position") || "static") } var e = function (b) { for (var c = a[0], e = b.offsetParent || c; e && e !== c && d(e) ;) e = e.offsetParent; return e || c }; return { position: function (b) { var c = this.offset(b), d = { top: 0, left: 0 }, f = e(b[0]); f != a[0] && (d = this.offset(angular.element(f)), d.top += f.clientTop - f.scrollTop, d.left += f.clientLeft - f.scrollLeft); var g = b[0].getBoundingClientRect(); return { width: g.width || b.prop("offsetWidth"), height: g.height || b.prop("offsetHeight"), top: c.top - d.top, left: c.left - d.left } }, offset: function (c) { var d = c[0].getBoundingClientRect(); return { width: d.width || c.prop("offsetWidth"), height: d.height || c.prop("offsetHeight"), top: d.top + (b.pageYOffset || a[0].body.scrollTop || a[0].documentElement.scrollTop), left: d.left + (b.pageXOffset || a[0].body.scrollLeft || a[0].documentElement.scrollLeft) } } } }]);
angular.module("ui.bootstrap.bindHtml", []).directive("bindHtmlUnsafe", function () { return function (a, b, c) { b.addClass("ng-binding").data("$binding", c.bindHtmlUnsafe), a.$watch(c.bindHtmlUnsafe, function (a) { b.html(a || "") }) } });
angular.module("ui.bootstrap.typeahead", ["ui.bootstrap.position", "ui.bootstrap.bindHtml"]).factory("typeaheadParser", ["$parse", function (a) { var b = /^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/; return { parse: function (c) { var d = c.match(b); if (!d) throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_' but got '" + c + "'."); return { itemName: d[3], source: a(d[4]), viewMapper: a(d[2] || d[1]), modelMapper: a(d[1]) } } } }]).directive("typeahead", ["$compile", "$parse", "$q", "$timeout", "$document", "$position", "typeaheadParser", function (a, b, c, d, e, f, g) { var h = [9, 13, 27, 38, 40]; return { require: "ngModel", link: function (i, j, k, l) { var m, n = i.$eval(k.typeaheadMinLength) || 1, o = i.$eval(k.typeaheadWaitMs) || 0, p = i.$eval(k.typeaheadEditable) !== !1, q = b(k.typeaheadLoading).assign || angular.noop, r = b(k.typeaheadOnSelect), s = k.typeaheadInputFormatter ? b(k.typeaheadInputFormatter) : void 0, t = k.typeaheadAppendToBody ? b(k.typeaheadAppendToBody) : !1, u = b(k.ngModel).assign, v = g.parse(k.typeahead), w = angular.element("<div typeahead-popup></div>"); w.attr({ matches: "matches", active: "activeIdx", select: "select(activeIdx)", query: "query", position: "position" }); 
angular.isDefined(k.typeaheadTemplateUrl) && w.attr("template-url", k.typeaheadTemplateUrl); var x = i.$new(); i.$on("$destroy", function () { x.$destroy() }); var y = function () { x.matches = [], x.activeIdx = -1 }, z = function (a) { var b = { $viewValue: a }; q(i, !0), c.when(v.source(i, b)).then(function (c) { if (a === l.$viewValue && m) { if (c.length > 0) { x.activeIdx = 0, x.matches.length = 0; for (var d = 0; d < c.length; d++) b[v.itemName] = c[d], x.matches.push({ label: v.viewMapper(x, b), model: c[d] }); x.query = a, x.position = t ? f.offset(j) : f.position(j), x.position.top = x.position.top + j.prop("offsetHeight") } else y(); q(i, !1) } }, function () { y(), q(i, !1) }) }; y(), x.query = void 0; var A; l.$parsers.unshift(function (a) { return m = !0, a && a.length >= n ? o > 0 ? (A && d.cancel(A), A = d(function () { z(a) }, o)) : z(a) : (q(i, !1), y()), p ? a : a ? (l.$setValidity("editable", !1), void 0) : (l.$setValidity("editable", !0), a) }), l.$formatters.push(function (a) { var b, c, d = {}; return s ? (d.$model = a, s(i, d)) : (d[v.itemName] = a, b = v.viewMapper(i, d), d[v.itemName] = void 0, c = v.viewMapper(i, d), b !== c ? b : a) }), x.select = function (a) { var b, c, d = {}; d[v.itemName] = c = x.matches[a].model, b = v.modelMapper(i, d), u(i, b), l.$setValidity("editable", !0), r(i, { $item: c, $model: b, $label: v.viewMapper(i, d) }), y(), j[0].focus() }, j.bind("keydown", function (a) { 0 !== x.matches.length && -1 !== h.indexOf(a.which) && (a.preventDefault(), 40 === a.which ? (x.activeIdx = (x.activeIdx + 1) % x.matches.length, x.$digest()) : 38 === a.which ? (x.activeIdx = (x.activeIdx ? x.activeIdx : x.matches.length) - 1, x.$digest()) : 13 === a.which || 9 === a.which ? x.$apply(function () { x.select(x.activeIdx) }) : 27 === a.which && (a.stopPropagation(), y(), x.$digest())) }), j.bind("blur", function () { m = !1 }); var B = function (a) { j[0] !== a.target && (y(), x.$digest()) }; e.bind("click", B), i.$on("$destroy", function () { e.unbind("click", B) }); var C = a(w)(x); t ? e.find("body").append(C) : j.after(C) } } }]).directive("typeaheadPopup", function () { return { restrict: "EA", scope: { matches: "=", query: "=", active: "=", position: "=", select: "&" }, replace: !0, templateUrl: "Spa/Views/Templates/typeahead-popup.html", link: function (a, b, c) { a.templateUrl = c.templateUrl, a.isOpen = function () { return a.matches.length > 0 }, a.isActive = function (b) { return a.active == b }, a.selectActive = function (b) { a.active = b }, a.selectMatch = function (b) { a.select({ activeIdx: b }) } } } }).directive("typeaheadMatch", ["$http", "$templateCache", "$compile", "$parse", function (a, b, c, d) { return { restrict: "EA", scope: { index: "=", match: "=", query: "=" }, link: function (e, f, g) { var h = d(g.templateUrl)(e.$parent) || "Spa/Views/Templates/typeahead-match.html"; a.get(h, { cache: b }).success(function (a) { f.replaceWith(c(a.trim())(e)) }) } } }]).filter("typeaheadHighlight", function () { function a(a) { return a.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1") } return function (b, c) { return c ? b.replace(new RegExp(a(c), "gi"), "<strong>$&</strong>") : b } });
angular.module("Spa/Views/Templates/typeahead-match.html", []).run(["$templateCache", function (a) { a.put("Spa/Views/Templates/typeahead-match.html", '<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>') }]);
angular.module("Spa/Views/Templates/typeahead-popup.html", []).run(["$templateCache", function (a) { a.put("Spa/Views/Templates/typeahead-popup.html", '<ul class="dropdown-menu" ng-style="{display: isOpen()&&\'block\' || \'none\', top: position.top+\'px\', left: position.left+\'px\'}">\n    <li ng-repeat="match in matches" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>') }]);

// DatePicker
//angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.datepicker", "ui.bootstrap.dateparser", "ui.bootstrap.position"]),
//angular.module("ui.bootstrap.tpls", ["Spa/Views/Templates/datepicker.html", "Spa/Views/Templates/day.html", "Spa/Views/Templates/month.html", "Spa/Views/Templates/popup.html", "Spa/Views/Templates/year.html"]),
angular.module("ui.bootstrap.datepicker", ["ui.bootstrap.dateparser", "ui.bootstrap.position"]).constant("datepickerConfig", { formatDay: "dd", formatMonth: "MMMM", formatYear: "yyyy", formatDayHeader: "EEE", formatDayTitle: "MMMM yyyy", formatMonthTitle: "yyyy", datepickerMode: "day", minMode: "day", maxMode: "year", showWeeks: !0, startingDay: 0, yearRange: 20, minDate: null, maxDate: null }).controller("DatepickerController", ["$scope", "$attrs", "$parse", "$interpolate", "$timeout", "$log", "dateFilter", "datepickerConfig", function (e, t, a, n, i, r, o, l) { var d = this, c = { $setViewValue: angular.noop }; this.modes = ["day", "month", "year"], angular.forEach(["formatDay", "formatMonth", "formatYear", "formatDayHeader", "formatDayTitle", "formatMonthTitle", "minMode", "maxMode", "showWeeks", "startingDay", "yearRange"], function (a, i) { d[a] = angular.isDefined(t[a]) ? 8 > i ? n(t[a])(e.$parent) : e.$parent.$eval(t[a]) : l[a] }), angular.forEach(["minDate", "maxDate"], function (n) { t[n] ? e.$parent.$watch(a(t[n]), function (e) { d[n] = e ? new Date(e) : null, d.refreshView() }) : d[n] = l[n] ? new Date(l[n]) : null }), e.datepickerMode = e.datepickerMode || l.datepickerMode, e.uniqueId = "datepicker-" + e.$id + "-" + Math.floor(1e4 * Math.random()), this.activeDate = angular.isDefined(t.initDate) ? e.$parent.$eval(t.initDate) : new Date, e.isActive = function (t) { return 0 === d.compare(t.date, d.activeDate) ? (e.activeDateId = t.uid, !0) : !1 }, this.init = function (e) { c = e, c.$render = function () { d.render() } }, this.render = function () { if (c.$modelValue) { var e = new Date(c.$modelValue), t = !isNaN(e); t ? this.activeDate = e : r.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'), c.$setValidity("date", t) } this.refreshView() }, this.refreshView = function () { if (this.element) { this._refreshView(); var e = c.$modelValue ? new Date(c.$modelValue) : null; c.$setValidity("date-disabled", !e || this.element && !this.isDisabled(e)) } }, this.createDateObject = function (e, t) { var a = c.$modelValue ? new Date(c.$modelValue) : null; return { date: e, label: o(e, t), selected: a && 0 === this.compare(e, a), disabled: this.isDisabled(e), current: 0 === this.compare(e, new Date) } }, this.isDisabled = function (a) { return this.minDate && this.compare(a, this.minDate) < 0 || this.maxDate && this.compare(a, this.maxDate) > 0 || t.dateDisabled && e.dateDisabled({ date: a, mode: e.datepickerMode }) }, this.split = function (e, t) { for (var a = []; e.length > 0;) a.push(e.splice(0, t)); return a }, e.select = function (t) { if (e.datepickerMode === d.minMode) { var a = c.$modelValue ? new Date(c.$modelValue) : new Date(0, 0, 0, 0, 0, 0, 0); a.setFullYear(t.getFullYear(), t.getMonth(), t.getDate()), c.$setViewValue(a), c.$render() } else d.activeDate = t, e.datepickerMode = d.modes[d.modes.indexOf(e.datepickerMode) - 1] }, e.move = function (e) { var t = d.activeDate.getFullYear() + e * (d.step.years || 0), a = d.activeDate.getMonth() + e * (d.step.months || 0); d.activeDate.setFullYear(t, a, 1), d.refreshView() }, e.toggleMode = function (t) { t = t || 1, e.datepickerMode === d.maxMode && 1 === t || e.datepickerMode === d.minMode && -1 === t || (e.datepickerMode = d.modes[d.modes.indexOf(e.datepickerMode) + t]) }, e.keys = { 13: "enter", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home", 37: "left", 38: "up", 39: "right", 40: "down" }; var s = function () { i(function () { d.element[0].focus() }, 0, !1) }; e.$on("datepicker.focus", s), e.keydown = function (t) { var a = e.keys[t.which]; if (a && !t.shiftKey && !t.altKey) if (t.preventDefault(), t.stopPropagation(), "enter" === a || "space" === a) { if (d.isDisabled(d.activeDate)) return; e.select(d.activeDate), s() } else !t.ctrlKey || "up" !== a && "down" !== a ? (d.handleKeyDown(a, t), d.refreshView()) : (e.toggleMode("up" === a ? 1 : -1), s()) } }]).directive("datepicker", function () { return { restrict: "EA", replace: !0, templateUrl: "Spa/Views/Templates/datepicker.html", scope: { datepickerMode: "=?", dateDisabled: "&" }, require: ["datepicker", "?^ngModel"], controller: "DatepickerController", link: function (e, t, a, n) { var i = n[0], r = n[1]; r && i.init(r) } } }).directive("daypicker", ["dateFilter", function (e) { return { restrict: "EA", replace: !0, templateUrl: "Spa/Views/Templates/day.html", require: "^datepicker", link: function (t, a, n, i) { function r(e, t) { return 1 !== t || e % 4 !== 0 || e % 100 === 0 && e % 400 !== 0 ? d[t] : 29 } function o(e, t) { var a = new Array(t), n = new Date(e), i = 0; for (n.setHours(12) ; t > i;) a[i++] = new Date(n), n.setDate(n.getDate() + 1); return a } function l(e) { var t = new Date(e); t.setDate(t.getDate() + 4 - (t.getDay() || 7)); var a = t.getTime(); return t.setMonth(0), t.setDate(1), Math.floor(Math.round((a - t) / 864e5) / 7) + 1 } t.showWeeks = i.showWeeks, i.step = { months: 1 }, i.element = a; var d = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; i._refreshView = function () { var a = i.activeDate.getFullYear(), n = i.activeDate.getMonth(), r = new Date(a, n, 1), d = i.startingDay - r.getDay(), c = d > 0 ? 7 - d : -d, s = new Date(r); c > 0 && s.setDate(-c + 1); for (var u = o(s, 42), p = 0; 42 > p; p++) u[p] = angular.extend(i.createDateObject(u[p], i.formatDay), { secondary: u[p].getMonth() !== n, uid: t.uniqueId + "-" + p }); t.labels = new Array(7); for (var f = 0; 7 > f; f++) t.labels[f] = { abbr: e(u[f].date, i.formatDayHeader), full: e(u[f].date, "EEEE") }; if (t.title = e(i.activeDate, i.formatDayTitle), t.rows = i.split(u, 7), t.showWeeks) { t.weekNumbers = []; for (var h = l(t.rows[0][0].date), g = t.rows.length; t.weekNumbers.push(h++) < g;); } }, i.compare = function (e, t) { return new Date(e.getFullYear(), e.getMonth(), e.getDate()) - new Date(t.getFullYear(), t.getMonth(), t.getDate()) }, i.handleKeyDown = function (e) { var t = i.activeDate.getDate(); if ("left" === e) t -= 1; else if ("up" === e) t -= 7; else if ("right" === e) t += 1; else if ("down" === e) t += 7; else if ("pageup" === e || "pagedown" === e) { var a = i.activeDate.getMonth() + ("pageup" === e ? -1 : 1); i.activeDate.setMonth(a, 1), t = Math.min(r(i.activeDate.getFullYear(), i.activeDate.getMonth()), t) } else "home" === e ? t = 1 : "end" === e && (t = r(i.activeDate.getFullYear(), i.activeDate.getMonth())); i.activeDate.setDate(t) }, i.refreshView() } } }]).directive("monthpicker", ["dateFilter", function (e) { return { restrict: "EA", replace: !0, templateUrl: "Spa/Views/Templates/month.html", require: "^datepicker", link: function (t, a, n, i) { i.step = { years: 1 }, i.element = a, i._refreshView = function () { for (var a = new Array(12), n = i.activeDate.getFullYear(), r = 0; 12 > r; r++) a[r] = angular.extend(i.createDateObject(new Date(n, r, 1), i.formatMonth), { uid: t.uniqueId + "-" + r }); t.title = e(i.activeDate, i.formatMonthTitle), t.rows = i.split(a, 3) }, i.compare = function (e, t) { return new Date(e.getFullYear(), e.getMonth()) - new Date(t.getFullYear(), t.getMonth()) }, i.handleKeyDown = function (e) { var t = i.activeDate.getMonth(); if ("left" === e) t -= 1; else if ("up" === e) t -= 3; else if ("right" === e) t += 1; else if ("down" === e) t += 3; else if ("pageup" === e || "pagedown" === e) { var a = i.activeDate.getFullYear() + ("pageup" === e ? -1 : 1); i.activeDate.setFullYear(a) } else "home" === e ? t = 0 : "end" === e && (t = 11); i.activeDate.setMonth(t) }, i.refreshView() } } }]).directive("yearpicker", ["dateFilter", function () { return { restrict: "EA", replace: !0, templateUrl: "Spa/Views/Templates/year.html", require: "^datepicker", link: function (e, t, a, n) { function i(e) { return parseInt((e - 1) / r, 10) * r + 1 } var r = n.yearRange; n.step = { years: r }, n.element = t, n._refreshView = function () { for (var t = new Array(r), a = 0, o = i(n.activeDate.getFullYear()) ; r > a; a++) t[a] = angular.extend(n.createDateObject(new Date(o + a, 0, 1), n.formatYear), { uid: e.uniqueId + "-" + a }); e.title = [t[0].label, t[r - 1].label].join(" - "), e.rows = n.split(t, 5) }, n.compare = function (e, t) { return e.getFullYear() - t.getFullYear() }, n.handleKeyDown = function (e) { var t = n.activeDate.getFullYear(); "left" === e ? t -= 1 : "up" === e ? t -= 5 : "right" === e ? t += 1 : "down" === e ? t += 5 : "pageup" === e || "pagedown" === e ? t += ("pageup" === e ? -1 : 1) * n.step.years : "home" === e ? t = i(n.activeDate.getFullYear()) : "end" === e && (t = i(n.activeDate.getFullYear()) + r - 1), n.activeDate.setFullYear(t) }, n.refreshView() } } }]).constant("datepickerPopupConfig", { datepickerPopup: "yyyy-MM-dd", currentText: "Today", clearText: "Clear", closeText: "Done", closeOnDateSelection: !0, appendToBody: !1, showButtonBar: !0 }).directive("datepickerPopup", ["$compile", "$parse", "$document", "$position", "dateFilter", "dateParser", "datepickerPopupConfig", function (e, t, a, n, i, r, o) { return { restrict: "EA", require: "ngModel", scope: { isOpen: "=?", currentText: "@", clearText: "@", closeText: "@", dateDisabled: "&" }, link: function (l, d, c, s) { function u(e) { return e.replace(/([A-Z])/g, function (e) { return "-" + e.toLowerCase() }) } function p(e) { if (e) { if (angular.isDate(e) && !isNaN(e)) return s.$setValidity("date", !0), e; if (angular.isString(e)) { var t = r.parse(e, f) || new Date(e); return isNaN(t) ? void s.$setValidity("date", !1) : (s.$setValidity("date", !0), t) } return void s.$setValidity("date", !1) } return s.$setValidity("date", !0), null } var f, h = angular.isDefined(c.closeOnDateSelection) ? l.$parent.$eval(c.closeOnDateSelection) : o.closeOnDateSelection, g = angular.isDefined(c.datepickerAppendToBody) ? l.$parent.$eval(c.datepickerAppendToBody) : o.appendToBody; l.showButtonBar = angular.isDefined(c.showButtonBar) ? l.$parent.$eval(c.showButtonBar) : o.showButtonBar, l.getText = function (e) { return l[e + "Text"] || o[e + "Text"] }, c.$observe("datepickerPopup", function (e) { f = e || o.datepickerPopup, s.$render() }); var m = angular.element("<div datepicker-popup-wrap><div datepicker></div></div>"); m.attr({ "ng-model": "date", "ng-change": "dateSelection()" }); var y = angular.element(m.children()[0]); c.datepickerOptions && angular.forEach(l.$parent.$eval(c.datepickerOptions), function (e, t) { y.attr(u(t), e) }), l.watchData = {}, angular.forEach(["minDate", "maxDate", "datepickerMode"], function (e) { if (c[e]) { var a = t(c[e]); if (l.$parent.$watch(a, function (t) { l.watchData[e] = t }), y.attr(u(e), "watchData." + e), "datepickerMode" === e) { var n = a.assign; l.$watch("watchData." + e, function (e, t) { e !== t && n(l.$parent, e) }) } } }), c.dateDisabled && y.attr("date-disabled", "dateDisabled({ date: date, mode: mode })"), s.$parsers.unshift(p), l.dateSelection = function (e) { angular.isDefined(e) && (l.date = e), s.$setViewValue(l.date), s.$render(), h && (l.isOpen = !1, d[0].focus()) }, d.bind("input change keyup", function () { l.$apply(function () { l.date = s.$modelValue }) }), s.$render = function () { var e = s.$viewValue ? i(s.$viewValue, f) : ""; d.val(e), l.date = p(s.$modelValue) }; var D = function (e) { l.isOpen && e.target !== d[0] && l.$apply(function () { l.isOpen = !1 }) }, b = function (e) { l.keydown(e) }; d.bind("keydown", b), l.keydown = function (e) { 27 === e.which ? (e.preventDefault(), e.stopPropagation(), l.close()) : 40 !== e.which || l.isOpen || (l.isOpen = !0) }, l.$watch("isOpen", function (e) { e ? (l.$broadcast("datepicker.focus"), l.position = g ? n.offset(d) : n.position(d), l.position.top = l.position.top + d.prop("offsetHeight"), a.bind("click", D)) : a.unbind("click", D) }), l.select = function (e) { if ("today" === e) { var t = new Date; angular.isDate(s.$modelValue) ? (e = new Date(s.$modelValue), e.setFullYear(t.getFullYear(), t.getMonth(), t.getDate())) : e = new Date(t.setHours(0, 0, 0, 0)) } l.dateSelection(e) }, l.close = function () { l.isOpen = !1, d[0].focus() }; var v = e(m)(l); m.remove(), g ? a.find("body").append(v) : d.after(v), l.$on("$destroy", function () { v.remove(), d.unbind("keydown", b), a.unbind("click", D) }) } } }]).directive("datepickerPopupWrap", function () { return { restrict: "EA", replace: !0, transclude: !0, templateUrl: "Spa/Views/Templates/popup.html", link: function (e, t) { t.bind("click", function (e) { e.preventDefault(), e.stopPropagation() }) } } });
angular.module("ui.bootstrap.dateparser", []).service("dateParser", ["$locale", "orderByFilter", function (e, t) { function a(e) { var a = [], n = e.split(""); return angular.forEach(i, function (t, i) { var r = e.indexOf(i); if (r > -1) { e = e.split(""), n[r] = "(" + t.regex + ")", e[r] = "$"; for (var o = r + 1, l = r + i.length; l > o; o++) n[o] = "", e[o] = "$"; e = e.join(""), a.push({ index: r, apply: t.apply }) } }), { regex: new RegExp("^" + n.join("") + "$"), map: t(a, "index") } } function n(e, t, a) { return 1 === t && a > 28 ? 29 === a && (e % 4 === 0 && e % 100 !== 0 || e % 400 === 0) : 3 === t || 5 === t || 8 === t || 10 === t ? 31 > a : !0 } this.parsers = {}; var i = { yyyy: { regex: "\\d{4}", apply: function (e) { this.year = +e } }, yy: { regex: "\\d{2}", apply: function (e) { this.year = +e + 2e3 } }, y: { regex: "\\d{1,4}", apply: function (e) { this.year = +e } }, MMMM: { regex: e.DATETIME_FORMATS.MONTH.join("|"), apply: function (t) { this.month = e.DATETIME_FORMATS.MONTH.indexOf(t) } }, MMM: { regex: e.DATETIME_FORMATS.SHORTMONTH.join("|"), apply: function (t) { this.month = e.DATETIME_FORMATS.SHORTMONTH.indexOf(t) } }, MM: { regex: "0[1-9]|1[0-2]", apply: function (e) { this.month = e - 1 } }, M: { regex: "[1-9]|1[0-2]", apply: function (e) { this.month = e - 1 } }, dd: { regex: "[0-2][0-9]{1}|3[0-1]{1}", apply: function (e) { this.date = +e } }, d: { regex: "[1-2]?[0-9]{1}|3[0-1]{1}", apply: function (e) { this.date = +e } }, EEEE: { regex: e.DATETIME_FORMATS.DAY.join("|") }, EEE: { regex: e.DATETIME_FORMATS.SHORTDAY.join("|") } }; this.parse = function (t, i) { if (!angular.isString(t) || !i) return t; i = e.DATETIME_FORMATS[i] || i, this.parsers[i] || (this.parsers[i] = a(i)); var r = this.parsers[i], o = r.regex, l = r.map, d = t.match(o); if (d && d.length) { for (var c, s = { year: 1900, month: 0, date: 1, hours: 0 }, u = 1, p = d.length; p > u; u++) { var f = l[u - 1]; f.apply && f.apply.call(s, d[u]) } return n(s.year, s.month, s.date) && (c = new Date(s.year, s.month, s.date, s.hours)), c } } }]);
//angular.module("ui.bootstrap.position", []).factory("$position", ["$document", "$window", function (e, t) { function a(e, a) { return e.currentStyle ? e.currentStyle[a] : t.getComputedStyle ? t.getComputedStyle(e)[a] : e.style[a] } function n(e) { return "static" === (a(e, "position") || "static") } var i = function (t) { for (var a = e[0], i = t.offsetParent || a; i && i !== a && n(i) ;) i = i.offsetParent; return i || a }; return { position: function (t) { var a = this.offset(t), n = { top: 0, left: 0 }, r = i(t[0]); r != e[0] && (n = this.offset(angular.element(r)), n.top += r.clientTop - r.scrollTop, n.left += r.clientLeft - r.scrollLeft); var o = t[0].getBoundingClientRect(); return { width: o.width || t.prop("offsetWidth"), height: o.height || t.prop("offsetHeight"), top: a.top - n.top, left: a.left - n.left } }, offset: function (a) { var n = a[0].getBoundingClientRect(); return { width: n.width || a.prop("offsetWidth"), height: n.height || a.prop("offsetHeight"), top: n.top + (t.pageYOffset || e[0].documentElement.scrollTop), left: n.left + (t.pageXOffset || e[0].documentElement.scrollLeft) } }, positionElements: function (e, t, a, n) { var i, r, o, l, d = a.split("-"), c = d[0], s = d[1] || "center"; i = n ? this.offset(e) : this.position(e), r = t.prop("offsetWidth"), o = t.prop("offsetHeight"); var u = { center: function () { return i.left + i.width / 2 - r / 2 }, left: function () { return i.left }, right: function () { return i.left + i.width } }, p = { center: function () { return i.top + i.height / 2 - o / 2 }, top: function () { return i.top }, bottom: function () { return i.top + i.height } }; switch (c) { case "right": l = { top: p[s](), left: u[c]() }; break; case "left": l = { top: p[s](), left: i.left - r }; break; case "bottom": l = { top: p[c](), left: u[s]() }; break; default: l = { top: i.top - o, left: u[s]() } } return l } } }]);
angular.module("Spa/Views/Templates/datepicker.html", []).run(["$templateCache", function (e) { e.put("Spa/Views/Templates/datepicker.html", '<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>') }]);
angular.module("Spa/Views/Templates/day.html", []).run(["$templateCache", function (e) { e.put("Spa/Views/Templates/day.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]);
angular.module("Spa/Views/Templates/month.html", []).run(["$templateCache", function (e) { e.put("Spa/Views/Templates/month.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]);
angular.module("Spa/Views/Templates/popup.html", []).run(["$templateCache", function (e) { e.put("Spa/Views/Templates/popup.html", '<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n') }]);
angular.module("Spa/Views/Templates/year.html", []).run(["$templateCache", function (e) { e.put("Spa/Views/Templates/year.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]);

//Tabs
//angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.tabs"]);
//angular.module("ui.bootstrap.tpls", ["Spa/Views/Templates/tab.html", "Spa/Views/Templates/tabset.html"]);
angular.module("ui.bootstrap.tabs", []).controller("TabsetController", ["$scope", function (t) { var e = this, a = e.tabs = t.tabs = []; e.select = function (t) { angular.forEach(a, function (e) { e.active && e !== t && (e.active = !1, e.onDeselect()) }), t.active = !0, t.onSelect() }, e.addTab = function (t) { a.push(t), 1 === a.length ? t.active = !0 : t.active && e.select(t) }, e.removeTab = function (t) { var n = a.indexOf(t); if (t.active && a.length > 1) { var i = n == a.length - 1 ? n - 1 : n + 1; e.select(a[i]) } a.splice(n, 1) } }]).directive("tabset", function () { return { restrict: "EA", transclude: !0, replace: !0, scope: { type: "@" }, controller: "TabsetController", templateUrl: "Spa/Views/Templates/tabset.html", link: function (t, e, a) { t.vertical = angular.isDefined(a.vertical) ? t.$parent.$eval(a.vertical) : !1, t.justified = angular.isDefined(a.justified) ? t.$parent.$eval(a.justified) : !1 } } }).directive("tab", ["$parse", function (t) { return { require: "^tabset", restrict: "EA", replace: !0, templateUrl: "Spa/Views/Templates/tab.html", transclude: !0, scope: { active: "=?", heading: "@", onSelect: "&select", onDeselect: "&deselect" }, controller: function () { }, compile: function (e, a, n) { return function (e, a, i, c) { e.$watch("active", function (t) { t && c.select(e) }), e.disabled = !1, i.disabled && e.$parent.$watch(t(i.disabled), function (t) { e.disabled = !!t }), e.select = function () { e.disabled || (e.active = !0) }, c.addTab(e), e.$on("$destroy", function () { c.removeTab(e) }), e.$transcludeFn = n } } } }]).directive("tabHeadingTransclude", [function () { return { restrict: "A", require: "^tab", link: function (t, e) { t.$watch("headingElement", function (t) { t && (e.html(""), e.append(t)) }) } } }]).directive("tabContentTransclude", function () { function t(t) { return t.tagName && (t.hasAttribute("tab-heading") || t.hasAttribute("data-tab-heading") || "tab-heading" === t.tagName.toLowerCase() || "data-tab-heading" === t.tagName.toLowerCase()) } return { restrict: "A", require: "^tabset", link: function (e, a, n) { var i = e.$eval(n.tabContentTransclude); i.$transcludeFn(i.$parent, function (e) { angular.forEach(e, function (e) { t(e) ? i.headingElement = e : a.append(e) }) }) } } });
angular.module("Spa/Views/Templates/tab.html", []).run(["$templateCache", function (t) { t.put("Spa/Views/Templates/tab.html", '<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n') }]);
angular.module("Spa/Views/Templates/tabset.html", []).run(["$templateCache", function (t) { t.put("Spa/Views/Templates/tabset.html", '<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n') }]);

//angular.module("ui.bootstrap", ["ui.bootstrap.tpls", "ui.bootstrap.datepicker", "ui.bootstrap.dateparser", "ui.bootstrap.position", "ui.bootstrap.typeahead", "ui.bootstrap.bindHtml", "ui.bootstrap.tabs"]), angular.module("ui.bootstrap.tpls", ["template/datepicker/datepicker.html", "template/datepicker/day.html", "template/datepicker/month.html", "template/datepicker/popup.html", "template/datepicker/year.html", "template/typeahead/typeahead-match.html", "template/typeahead/typeahead-popup.html", "template/tabs/tab.html", "template/tabs/tabset.html"]), angular.module("ui.bootstrap.datepicker", ["ui.bootstrap.dateparser", "ui.bootstrap.position"]).constant("datepickerConfig", { formatDay: "dd", formatMonth: "MMMM", formatYear: "yyyy", formatDayHeader: "EEE", formatDayTitle: "MMMM yyyy", formatMonthTitle: "yyyy", datepickerMode: "day", minMode: "day", maxMode: "year", showWeeks: !0, startingDay: 0, yearRange: 20, minDate: null, maxDate: null }).controller("DatepickerController", ["$scope", "$attrs", "$parse", "$interpolate", "$timeout", "$log", "dateFilter", "datepickerConfig", function (e, t, a, n, i, r, o, l) { var c = this, s = { $setViewValue: angular.noop }; this.modes = ["day", "month", "year"], angular.forEach(["formatDay", "formatMonth", "formatYear", "formatDayHeader", "formatDayTitle", "formatMonthTitle", "minMode", "maxMode", "showWeeks", "startingDay", "yearRange"], function (a, i) { c[a] = angular.isDefined(t[a]) ? 8 > i ? n(t[a])(e.$parent) : e.$parent.$eval(t[a]) : l[a] }), angular.forEach(["minDate", "maxDate"], function (n) { t[n] ? e.$parent.$watch(a(t[n]), function (e) { c[n] = e ? new Date(e) : null, c.refreshView() }) : c[n] = l[n] ? new Date(l[n]) : null }), e.datepickerMode = e.datepickerMode || l.datepickerMode, e.uniqueId = "datepicker-" + e.$id + "-" + Math.floor(1e4 * Math.random()), this.activeDate = angular.isDefined(t.initDate) ? e.$parent.$eval(t.initDate) : new Date, e.isActive = function (t) { return 0 === c.compare(t.date, c.activeDate) ? (e.activeDateId = t.uid, !0) : !1 }, this.init = function (e) { s = e, s.$render = function () { c.render() } }, this.render = function () { if (s.$modelValue) { var e = new Date(s.$modelValue), t = !isNaN(e); t ? this.activeDate = e : r.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'), s.$setValidity("date", t) } this.refreshView() }, this.refreshView = function () { if (this.element) { this._refreshView(); var e = s.$modelValue ? new Date(s.$modelValue) : null; s.$setValidity("date-disabled", !e || this.element && !this.isDisabled(e)) } }, this.createDateObject = function (e, t) { var a = s.$modelValue ? new Date(s.$modelValue) : null; return { date: e, label: o(e, t), selected: a && 0 === this.compare(e, a), disabled: this.isDisabled(e), current: 0 === this.compare(e, new Date) } }, this.isDisabled = function (a) { return this.minDate && this.compare(a, this.minDate) < 0 || this.maxDate && this.compare(a, this.maxDate) > 0 || t.dateDisabled && e.dateDisabled({ date: a, mode: e.datepickerMode }) }, this.split = function (e, t) { for (var a = []; e.length > 0;) a.push(e.splice(0, t)); return a }, e.select = function (t) { if (e.datepickerMode === c.minMode) { var a = s.$modelValue ? new Date(s.$modelValue) : new Date(0, 0, 0, 0, 0, 0, 0); a.setFullYear(t.getFullYear(), t.getMonth(), t.getDate()), s.$setViewValue(a), s.$render() } else c.activeDate = t, e.datepickerMode = c.modes[c.modes.indexOf(e.datepickerMode) - 1] }, e.move = function (e) { var t = c.activeDate.getFullYear() + e * (c.step.years || 0), a = c.activeDate.getMonth() + e * (c.step.months || 0); c.activeDate.setFullYear(t, a, 1), c.refreshView() }, e.toggleMode = function (t) { t = t || 1, e.datepickerMode === c.maxMode && 1 === t || e.datepickerMode === c.minMode && -1 === t || (e.datepickerMode = c.modes[c.modes.indexOf(e.datepickerMode) + t]) }, e.keys = { 13: "enter", 32: "space", 33: "pageup", 34: "pagedown", 35: "end", 36: "home", 37: "left", 38: "up", 39: "right", 40: "down" }; var d = function () { i(function () { c.element[0].focus() }, 0, !1) }; e.$on("datepicker.focus", d), e.keydown = function (t) { var a = e.keys[t.which]; if (a && !t.shiftKey && !t.altKey) if (t.preventDefault(), t.stopPropagation(), "enter" === a || "space" === a) { if (c.isDisabled(c.activeDate)) return; e.select(c.activeDate), d() } else !t.ctrlKey || "up" !== a && "down" !== a ? (c.handleKeyDown(a, t), c.refreshView()) : (e.toggleMode("up" === a ? 1 : -1), d()) } }]).directive("datepicker", function () { return { restrict: "EA", replace: !0, templateUrl: "template/datepicker/datepicker.html", scope: { datepickerMode: "=?", dateDisabled: "&" }, require: ["datepicker", "?^ngModel"], controller: "DatepickerController", link: function (e, t, a, n) { var i = n[0], r = n[1]; r && i.init(r) } } }).directive("daypicker", ["dateFilter", function (e) { return { restrict: "EA", replace: !0, templateUrl: "template/datepicker/day.html", require: "^datepicker", link: function (t, a, n, i) { function r(e, t) { return 1 !== t || e % 4 !== 0 || e % 100 === 0 && e % 400 !== 0 ? c[t] : 29 } function o(e, t) { var a = new Array(t), n = new Date(e), i = 0; for (n.setHours(12) ; t > i;) a[i++] = new Date(n), n.setDate(n.getDate() + 1); return a } function l(e) { var t = new Date(e); t.setDate(t.getDate() + 4 - (t.getDay() || 7)); var a = t.getTime(); return t.setMonth(0), t.setDate(1), Math.floor(Math.round((a - t) / 864e5) / 7) + 1 } t.showWeeks = i.showWeeks, i.step = { months: 1 }, i.element = a; var c = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; i._refreshView = function () { var a = i.activeDate.getFullYear(), n = i.activeDate.getMonth(), r = new Date(a, n, 1), c = i.startingDay - r.getDay(), s = c > 0 ? 7 - c : -c, d = new Date(r); s > 0 && d.setDate(-s + 1); for (var u = o(d, 42), p = 0; 42 > p; p++) u[p] = angular.extend(i.createDateObject(u[p], i.formatDay), { secondary: u[p].getMonth() !== n, uid: t.uniqueId + "-" + p }); t.labels = new Array(7); for (var f = 0; 7 > f; f++) t.labels[f] = { abbr: e(u[f].date, i.formatDayHeader), full: e(u[f].date, "EEEE") }; if (t.title = e(i.activeDate, i.formatDayTitle), t.rows = i.split(u, 7), t.showWeeks) { t.weekNumbers = []; for (var h = l(t.rows[0][0].date), m = t.rows.length; t.weekNumbers.push(h++) < m;); } }, i.compare = function (e, t) { return new Date(e.getFullYear(), e.getMonth(), e.getDate()) - new Date(t.getFullYear(), t.getMonth(), t.getDate()) }, i.handleKeyDown = function (e) { var t = i.activeDate.getDate(); if ("left" === e) t -= 1; else if ("up" === e) t -= 7; else if ("right" === e) t += 1; else if ("down" === e) t += 7; else if ("pageup" === e || "pagedown" === e) { var a = i.activeDate.getMonth() + ("pageup" === e ? -1 : 1); i.activeDate.setMonth(a, 1), t = Math.min(r(i.activeDate.getFullYear(), i.activeDate.getMonth()), t) } else "home" === e ? t = 1 : "end" === e && (t = r(i.activeDate.getFullYear(), i.activeDate.getMonth())); i.activeDate.setDate(t) }, i.refreshView() } } }]).directive("monthpicker", ["dateFilter", function (e) { return { restrict: "EA", replace: !0, templateUrl: "template/datepicker/month.html", require: "^datepicker", link: function (t, a, n, i) { i.step = { years: 1 }, i.element = a, i._refreshView = function () { for (var a = new Array(12), n = i.activeDate.getFullYear(), r = 0; 12 > r; r++) a[r] = angular.extend(i.createDateObject(new Date(n, r, 1), i.formatMonth), { uid: t.uniqueId + "-" + r }); t.title = e(i.activeDate, i.formatMonthTitle), t.rows = i.split(a, 3) }, i.compare = function (e, t) { return new Date(e.getFullYear(), e.getMonth()) - new Date(t.getFullYear(), t.getMonth()) }, i.handleKeyDown = function (e) { var t = i.activeDate.getMonth(); if ("left" === e) t -= 1; else if ("up" === e) t -= 3; else if ("right" === e) t += 1; else if ("down" === e) t += 3; else if ("pageup" === e || "pagedown" === e) { var a = i.activeDate.getFullYear() + ("pageup" === e ? -1 : 1); i.activeDate.setFullYear(a) } else "home" === e ? t = 0 : "end" === e && (t = 11); i.activeDate.setMonth(t) }, i.refreshView() } } }]).directive("yearpicker", ["dateFilter", function () { return { restrict: "EA", replace: !0, templateUrl: "template/datepicker/year.html", require: "^datepicker", link: function (e, t, a, n) { function i(e) { return parseInt((e - 1) / r, 10) * r + 1 } var r = n.yearRange; n.step = { years: r }, n.element = t, n._refreshView = function () { for (var t = new Array(r), a = 0, o = i(n.activeDate.getFullYear()) ; r > a; a++) t[a] = angular.extend(n.createDateObject(new Date(o + a, 0, 1), n.formatYear), { uid: e.uniqueId + "-" + a }); e.title = [t[0].label, t[r - 1].label].join(" - "), e.rows = n.split(t, 5) }, n.compare = function (e, t) { return e.getFullYear() - t.getFullYear() }, n.handleKeyDown = function (e) { var t = n.activeDate.getFullYear(); "left" === e ? t -= 1 : "up" === e ? t -= 5 : "right" === e ? t += 1 : "down" === e ? t += 5 : "pageup" === e || "pagedown" === e ? t += ("pageup" === e ? -1 : 1) * n.step.years : "home" === e ? t = i(n.activeDate.getFullYear()) : "end" === e && (t = i(n.activeDate.getFullYear()) + r - 1), n.activeDate.setFullYear(t) }, n.refreshView() } } }]).constant("datepickerPopupConfig", { datepickerPopup: "yyyy-MM-dd", currentText: "Today", clearText: "Clear", closeText: "Done", closeOnDateSelection: !0, appendToBody: !1, showButtonBar: !0 }).directive("datepickerPopup", ["$compile", "$parse", "$document", "$position", "dateFilter", "dateParser", "datepickerPopupConfig", function (e, t, a, n, i, r, o) { return { restrict: "EA", require: "ngModel", scope: { isOpen: "=?", currentText: "@", clearText: "@", closeText: "@", dateDisabled: "&" }, link: function (l, c, s, d) { function u(e) { return e.replace(/([A-Z])/g, function (e) { return "-" + e.toLowerCase() }) } function p(e) { if (e) { if (angular.isDate(e) && !isNaN(e)) return d.$setValidity("date", !0), e; if (angular.isString(e)) { var t = r.parse(e, f) || new Date(e); return isNaN(t) ? void d.$setValidity("date", !1) : (d.$setValidity("date", !0), t) } return void d.$setValidity("date", !1) } return d.$setValidity("date", !0), null } var f, h = angular.isDefined(s.closeOnDateSelection) ? l.$parent.$eval(s.closeOnDateSelection) : o.closeOnDateSelection, m = angular.isDefined(s.datepickerAppendToBody) ? l.$parent.$eval(s.datepickerAppendToBody) : o.appendToBody; l.showButtonBar = angular.isDefined(s.showButtonBar) ? l.$parent.$eval(s.showButtonBar) : o.showButtonBar, l.getText = function (e) { return l[e + "Text"] || o[e + "Text"] }, s.$observe("datepickerPopup", function (e) { f = e || o.datepickerPopup, d.$render() }); var g = angular.element("<div datepicker-popup-wrap><div datepicker></div></div>"); g.attr({ "ng-model": "date", "ng-change": "dateSelection()" }); var v = angular.element(g.children()[0]); s.datepickerOptions && angular.forEach(l.$parent.$eval(s.datepickerOptions), function (e, t) { v.attr(u(t), e) }), l.watchData = {}, angular.forEach(["minDate", "maxDate", "datepickerMode"], function (e) { if (s[e]) { var a = t(s[e]); if (l.$parent.$watch(a, function (t) { l.watchData[e] = t }), v.attr(u(e), "watchData." + e), "datepickerMode" === e) { var n = a.assign; l.$watch("watchData." + e, function (e, t) { e !== t && n(l.$parent, e) }) } } }), s.dateDisabled && v.attr("date-disabled", "dateDisabled({ date: date, mode: mode })"), d.$parsers.unshift(p), l.dateSelection = function (e) { angular.isDefined(e) && (l.date = e), d.$setViewValue(l.date), d.$render(), h && (l.isOpen = !1, c[0].focus()) }, c.bind("input change keyup", function () { l.$apply(function () { l.date = d.$modelValue }) }), d.$render = function () { var e = d.$viewValue ? i(d.$viewValue, f) : ""; c.val(e), l.date = p(d.$modelValue) }; var b = function (e) { l.isOpen && e.target !== c[0] && l.$apply(function () { l.isOpen = !1 }) }, y = function (e) { l.keydown(e) }; c.bind("keydown", y), l.keydown = function (e) { 27 === e.which ? (e.preventDefault(), e.stopPropagation(), l.close()) : 40 !== e.which || l.isOpen || (l.isOpen = !0) }, l.$watch("isOpen", function (e) { e ? (l.$broadcast("datepicker.focus"), l.position = m ? n.offset(c) : n.position(c), l.position.top = l.position.top + c.prop("offsetHeight"), a.bind("click", b)) : a.unbind("click", b) }), l.select = function (e) { if ("today" === e) { var t = new Date; angular.isDate(d.$modelValue) ? (e = new Date(d.$modelValue), e.setFullYear(t.getFullYear(), t.getMonth(), t.getDate())) : e = new Date(t.setHours(0, 0, 0, 0)) } l.dateSelection(e) }, l.close = function () { l.isOpen = !1, c[0].focus() }; var $ = e(g)(l); g.remove(), m ? a.find("body").append($) : c.after($), l.$on("$destroy", function () { $.remove(), c.unbind("keydown", y), a.unbind("click", b) }) } } }]).directive("datepickerPopupWrap", function () { return { restrict: "EA", replace: !0, transclude: !0, templateUrl: "template/datepicker/popup.html", link: function (e, t) { t.bind("click", function (e) { e.preventDefault(), e.stopPropagation() }) } } }), angular.module("ui.bootstrap.dateparser", []).service("dateParser", ["$locale", "orderByFilter", function (e, t) { function a(e) { var a = [], n = e.split(""); return angular.forEach(i, function (t, i) { var r = e.indexOf(i); if (r > -1) { e = e.split(""), n[r] = "(" + t.regex + ")", e[r] = "$"; for (var o = r + 1, l = r + i.length; l > o; o++) n[o] = "", e[o] = "$"; e = e.join(""), a.push({ index: r, apply: t.apply }) } }), { regex: new RegExp("^" + n.join("") + "$"), map: t(a, "index") } } function n(e, t, a) { return 1 === t && a > 28 ? 29 === a && (e % 4 === 0 && e % 100 !== 0 || e % 400 === 0) : 3 === t || 5 === t || 8 === t || 10 === t ? 31 > a : !0 } this.parsers = {}; var i = { yyyy: { regex: "\\d{4}", apply: function (e) { this.year = +e } }, yy: { regex: "\\d{2}", apply: function (e) { this.year = +e + 2e3 } }, y: { regex: "\\d{1,4}", apply: function (e) { this.year = +e } }, MMMM: { regex: e.DATETIME_FORMATS.MONTH.join("|"), apply: function (t) { this.month = e.DATETIME_FORMATS.MONTH.indexOf(t) } }, MMM: { regex: e.DATETIME_FORMATS.SHORTMONTH.join("|"), apply: function (t) { this.month = e.DATETIME_FORMATS.SHORTMONTH.indexOf(t) } }, MM: { regex: "0[1-9]|1[0-2]", apply: function (e) { this.month = e - 1 } }, M: { regex: "[1-9]|1[0-2]", apply: function (e) { this.month = e - 1 } }, dd: { regex: "[0-2][0-9]{1}|3[0-1]{1}", apply: function (e) { this.date = +e } }, d: { regex: "[1-2]?[0-9]{1}|3[0-1]{1}", apply: function (e) { this.date = +e } }, EEEE: { regex: e.DATETIME_FORMATS.DAY.join("|") }, EEE: { regex: e.DATETIME_FORMATS.SHORTDAY.join("|") } }; this.parse = function (t, i) { if (!angular.isString(t) || !i) return t; i = e.DATETIME_FORMATS[i] || i, this.parsers[i] || (this.parsers[i] = a(i)); var r = this.parsers[i], o = r.regex, l = r.map, c = t.match(o); if (c && c.length) { for (var s, d = { year: 1900, month: 0, date: 1, hours: 0 }, u = 1, p = c.length; p > u; u++) { var f = l[u - 1]; f.apply && f.apply.call(d, c[u]) } return n(d.year, d.month, d.date) && (s = new Date(d.year, d.month, d.date, d.hours)), s } } }]), angular.module("ui.bootstrap.position", []).factory("$position", ["$document", "$window", function (e, t) { function a(e, a) { return e.currentStyle ? e.currentStyle[a] : t.getComputedStyle ? t.getComputedStyle(e)[a] : e.style[a] } function n(e) { return "static" === (a(e, "position") || "static") } var i = function (t) { for (var a = e[0], i = t.offsetParent || a; i && i !== a && n(i) ;) i = i.offsetParent; return i || a }; return { position: function (t) { var a = this.offset(t), n = { top: 0, left: 0 }, r = i(t[0]); r != e[0] && (n = this.offset(angular.element(r)), n.top += r.clientTop - r.scrollTop, n.left += r.clientLeft - r.scrollLeft); var o = t[0].getBoundingClientRect(); return { width: o.width || t.prop("offsetWidth"), height: o.height || t.prop("offsetHeight"), top: a.top - n.top, left: a.left - n.left } }, offset: function (a) { var n = a[0].getBoundingClientRect(); return { width: n.width || a.prop("offsetWidth"), height: n.height || a.prop("offsetHeight"), top: n.top + (t.pageYOffset || e[0].documentElement.scrollTop), left: n.left + (t.pageXOffset || e[0].documentElement.scrollLeft) } }, positionElements: function (e, t, a, n) { var i, r, o, l, c = a.split("-"), s = c[0], d = c[1] || "center"; i = n ? this.offset(e) : this.position(e), r = t.prop("offsetWidth"), o = t.prop("offsetHeight"); var u = { center: function () { return i.left + i.width / 2 - r / 2 }, left: function () { return i.left }, right: function () { return i.left + i.width } }, p = { center: function () { return i.top + i.height / 2 - o / 2 }, top: function () { return i.top }, bottom: function () { return i.top + i.height } }; switch (s) { case "right": l = { top: p[d](), left: u[s]() }; break; case "left": l = { top: p[d](), left: i.left - r }; break; case "bottom": l = { top: p[s](), left: u[d]() }; break; default: l = { top: i.top - o, left: u[d]() } } return l } } }]), angular.module("ui.bootstrap.typeahead", ["ui.bootstrap.position", "ui.bootstrap.bindHtml"]).factory("typeaheadParser", ["$parse", function (e) { var t = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/; return { parse: function (a) { var n = a.match(t); if (!n) throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "' + a + '".'); return { itemName: n[3], source: e(n[4]), viewMapper: e(n[2] || n[1]), modelMapper: e(n[1]) } } } }]).directive("typeahead", ["$compile", "$parse", "$q", "$timeout", "$document", "$position", "typeaheadParser", function (e, t, a, n, i, r, o) { var l = [9, 13, 27, 38, 40]; return { require: "ngModel", link: function (c, s, d, u) { var p, f = c.$eval(d.typeaheadMinLength) || 1, h = c.$eval(d.typeaheadWaitMs) || 0, m = c.$eval(d.typeaheadEditable) !== !1, g = t(d.typeaheadLoading).assign || angular.noop, v = t(d.typeaheadOnSelect), b = d.typeaheadInputFormatter ? t(d.typeaheadInputFormatter) : void 0, y = d.typeaheadAppendToBody ? c.$eval(d.typeaheadAppendToBody) : !1, $ = t(d.ngModel).assign, D = o.parse(d.typeahead), w = c.$new(); c.$on("$destroy", function () { w.$destroy() }); var k = "typeahead-" + w.$id + "-" + Math.floor(1e4 * Math.random()); s.attr({ "aria-autocomplete": "list", "aria-expanded": !1, "aria-owns": k }); var M = angular.element("<div typeahead-popup></div>"); M.attr({ id: k, matches: "matches", active: "activeIdx", select: "select(activeIdx)", query: "query", position: "position" }), angular.isDefined(d.typeaheadTemplateUrl) && M.attr("template-url", d.typeaheadTemplateUrl); var x = function () { w.matches = [], w.activeIdx = -1, s.attr("aria-expanded", !1) }, T = function (e) { return k + "-option-" + e }; w.$watch("activeIdx", function (e) { 0 > e ? s.removeAttr("aria-activedescendant") : s.attr("aria-activedescendant", T(e)) }); var E = function (e) { var t = { $viewValue: e }; g(c, !0), a.when(D.source(c, t)).then(function (a) { var n = e === u.$viewValue; if (n && p) if (a.length > 0) { w.activeIdx = 0, w.matches.length = 0; for (var i = 0; i < a.length; i++) t[D.itemName] = a[i], w.matches.push({ id: T(i), label: D.viewMapper(w, t), model: a[i] }); w.query = e, w.position = y ? r.offset(s) : r.position(s), w.position.top = w.position.top + s.prop("offsetHeight"), s.attr("aria-expanded", !0) } else x(); n && g(c, !1) }, function () { x(), g(c, !1) }) }; x(), w.query = void 0; var A, O = function (e) { A = n(function () { E(e) }, h) }, V = function () { A && n.cancel(A) }; u.$parsers.unshift(function (e) { return p = !0, e && e.length >= f ? h > 0 ? (V(), O(e)) : E(e) : (g(c, !1), V(), x()), m ? e : e ? void u.$setValidity("editable", !1) : (u.$setValidity("editable", !0), e) }), u.$formatters.push(function (e) { var t, a, n = {}; return b ? (n.$model = e, b(c, n)) : (n[D.itemName] = e, t = D.viewMapper(c, n), n[D.itemName] = void 0, a = D.viewMapper(c, n), t !== a ? t : e) }), w.select = function (e) { var t, a, i = {}; i[D.itemName] = a = w.matches[e].model, t = D.modelMapper(c, i), $(c, t), u.$setValidity("editable", !0), v(c, { $item: a, $model: t, $label: D.viewMapper(c, i) }), x(), n(function () { s[0].focus() }, 0, !1) }, s.bind("keydown", function (e) { 0 !== w.matches.length && -1 !== l.indexOf(e.which) && (e.preventDefault(), 40 === e.which ? (w.activeIdx = (w.activeIdx + 1) % w.matches.length, w.$digest()) : 38 === e.which ? (w.activeIdx = (w.activeIdx ? w.activeIdx : w.matches.length) - 1, w.$digest()) : 13 === e.which || 9 === e.which ? w.$apply(function () { w.select(w.activeIdx) }) : 27 === e.which && (e.stopPropagation(), x(), w.$digest())) }), s.bind("blur", function () { p = !1 }); var F = function (e) { s[0] !== e.target && (x(), w.$digest()) }; i.bind("click", F), c.$on("$destroy", function () { i.unbind("click", F) }); var C = e(M)(w); y ? i.find("body").append(C) : s.after(C) } } }]).directive("typeaheadPopup", function () { return { restrict: "EA", scope: { matches: "=", query: "=", active: "=", position: "=", select: "&" }, replace: !0, templateUrl: "template/typeahead/typeahead-popup.html", link: function (e, t, a) { e.templateUrl = a.templateUrl, e.isOpen = function () { return e.matches.length > 0 }, e.isActive = function (t) { return e.active == t }, e.selectActive = function (t) { e.active = t }, e.selectMatch = function (t) { e.select({ activeIdx: t }) } } } }).directive("typeaheadMatch", ["$http", "$templateCache", "$compile", "$parse", function (e, t, a, n) { return { restrict: "EA", scope: { index: "=", match: "=", query: "=" }, link: function (i, r, o) { var l = n(o.templateUrl)(i.$parent) || "template/typeahead/typeahead-match.html"; e.get(l, { cache: t }).success(function (e) { r.replaceWith(a(e.trim())(i)) }) } } }]).filter("typeaheadHighlight", function () { function e(e) { return e.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1") } return function (t, a) { return a ? ("" + t).replace(new RegExp(e(a), "gi"), "<strong>$&</strong>") : t } }), angular.module("ui.bootstrap.bindHtml", []).directive("bindHtmlUnsafe", function () { return function (e, t, a) { t.addClass("ng-binding").data("$binding", a.bindHtmlUnsafe), e.$watch(a.bindHtmlUnsafe, function (e) { t.html(e || "") }) } }), angular.module("ui.bootstrap.tabs", []).controller("TabsetController", ["$scope", function (e) { var t = this, a = t.tabs = e.tabs = []; t.select = function (e) { angular.forEach(a, function (t) { t.active && t !== e && (t.active = !1, t.onDeselect()) }), e.active = !0, e.onSelect() }, t.addTab = function (e) { a.push(e), 1 === a.length ? e.active = !0 : e.active && t.select(e) }, t.removeTab = function (e) { var n = a.indexOf(e); if (e.active && a.length > 1) { var i = n == a.length - 1 ? n - 1 : n + 1; t.select(a[i]) } a.splice(n, 1) } }]).directive("tabset", function () { return { restrict: "EA", transclude: !0, replace: !0, scope: { type: "@" }, controller: "TabsetController", templateUrl: "template/tabs/tabset.html", link: function (e, t, a) { e.vertical = angular.isDefined(a.vertical) ? e.$parent.$eval(a.vertical) : !1, e.justified = angular.isDefined(a.justified) ? e.$parent.$eval(a.justified) : !1 } } }).directive("tab", ["$parse", function (e) { return { require: "^tabset", restrict: "EA", replace: !0, templateUrl: "template/tabs/tab.html", transclude: !0, scope: { active: "=?", heading: "@", onSelect: "&select", onDeselect: "&deselect" }, controller: function () { }, compile: function (t, a, n) { return function (t, a, i, r) { t.$watch("active", function (e) { e && r.select(t) }), t.disabled = !1, i.disabled && t.$parent.$watch(e(i.disabled), function (e) { t.disabled = !!e }), t.select = function () { t.disabled || (t.active = !0) }, r.addTab(t), t.$on("$destroy", function () { r.removeTab(t) }), t.$transcludeFn = n } } } }]).directive("tabHeadingTransclude", [function () { return { restrict: "A", require: "^tab", link: function (e, t) { e.$watch("headingElement", function (e) { e && (t.html(""), t.append(e)) }) } } }]).directive("tabContentTransclude", function () { function e(e) { return e.tagName && (e.hasAttribute("tab-heading") || e.hasAttribute("data-tab-heading") || "tab-heading" === e.tagName.toLowerCase() || "data-tab-heading" === e.tagName.toLowerCase()) } return { restrict: "A", require: "^tabset", link: function (t, a, n) { var i = t.$eval(n.tabContentTransclude); i.$transcludeFn(i.$parent, function (t) { angular.forEach(t, function (t) { e(t) ? i.headingElement = t : a.append(t) }) }) } } }), angular.module("template/datepicker/datepicker.html", []).run(["$templateCache", function (e) { e.put("template/datepicker/datepicker.html", '<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>') }]), angular.module("template/datepicker/day.html", []).run(["$templateCache", function (e) { e.put("template/datepicker/day.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]), angular.module("template/datepicker/month.html", []).run(["$templateCache", function (e) { e.put("template/datepicker/month.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]), angular.module("template/datepicker/popup.html", []).run(["$templateCache", function (e) { e.put("template/datepicker/popup.html", '<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n') }]), angular.module("template/datepicker/year.html", []).run(["$templateCache", function (e) { e.put("template/datepicker/year.html", '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n') }]), angular.module("template/typeahead/typeahead-match.html", []).run(["$templateCache", function (e) { e.put("template/typeahead/typeahead-match.html", '<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>') }]), angular.module("template/typeahead/typeahead-popup.html", []).run(["$templateCache", function (e) { e.put("template/typeahead/typeahead-popup.html", '<ul class="dropdown-menu" ng-show="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n') }]), angular.module("template/tabs/tab.html", []).run(["$templateCache", function (e) { e.put("template/tabs/tab.html", '<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n') }]), angular.module("template/tabs/tabset.html", []).run(["$templateCache", function (e) { e.put("template/tabs/tabset.html", '<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n') }]);